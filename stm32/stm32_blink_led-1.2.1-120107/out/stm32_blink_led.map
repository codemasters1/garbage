
Discarded input sections

 .data          0x00000000        0x0 out/startup.o
 .bss           0x00000000        0x0 out/startup.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .text          0x00000000        0x0 out/gpio.o
 .data          0x00000000        0x0 out/gpio.o
 .bss           0x00000000        0x0 out/gpio.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .text          0x00000000        0x0 out/main.o
 .data          0x00000000        0x0 out/main.o
 .bss           0x00000000        0x0 out/main.o
 .debug_macro   0x00000000      0x85c out/main.o
 .debug_macro   0x00000000       0x22 out/main.o
 .debug_macro   0x00000000       0x44 out/main.o
 .debug_macro   0x00000000       0x1c out/main.o
 .debug_macro   0x00000000      0x1f7 out/main.o
 .debug_macro   0x00000000       0x56 out/main.o
 .debug_macro   0x00000000      0x6bd out/main.o
 .debug_macro   0x00000000     0x7def out/main.o
 .debug_macro   0x00000000      0x353 out/main.o
 .group         0x00000000        0x8 out/vectors.o
 .text          0x00000000        0x0 out/vectors.o
 .data          0x00000000        0x0 out/vectors.o
 .bss           0x00000000        0x0 out/vectors.o
 .debug_macro   0x00000000      0x85c out/vectors.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x08000000         0x00020000         xr
ram              0x20000000         0x00005000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD out/startup.o
LOAD out/gpio.o
LOAD out/main.o
LOAD out/vectors.o
LOAD c:/dev/arm/toolchains/gcc-arm-none-eabi-4_9-141220/bin/../lib/gcc/arm-none-eabi/4.9.3/../../../../arm-none-eabi/lib/armv7-m\libstdc++.a
LOAD c:/dev/arm/toolchains/gcc-arm-none-eabi-4_9-141220/bin/../lib/gcc/arm-none-eabi/4.9.3/../../../../arm-none-eabi/lib/armv7-m\libm.a
START GROUP
LOAD c:/dev/arm/toolchains/gcc-arm-none-eabi-4_9-141220/bin/../lib/gcc/arm-none-eabi/4.9.3/armv7-m\libgcc.a
LOAD c:/dev/arm/toolchains/gcc-arm-none-eabi-4_9-141220/bin/../lib/gcc/arm-none-eabi/4.9.3/../../../../arm-none-eabi/lib/armv7-m\libg.a
LOAD c:/dev/arm/toolchains/gcc-arm-none-eabi-4_9-141220/bin/../lib/gcc/arm-none-eabi/4.9.3/../../../../arm-none-eabi/lib/armv7-m\libc.a
END GROUP
                0x00000000                __main_stack_size = 0x0
                0x00000400                __process_stack_size = 0x400
                [0x00000000]                PROVIDE (__main_stack_size, __main_stack_size)
                [0x00000400]                PROVIDE (__process_stack_size, __process_stack_size)
                0x08000000                __rom_start = ORIGIN (rom)
                0x00020000                __rom_size = 0x20000
                0x08020000                __rom_end = (__rom_start + __rom_size)
                0x20000000                __ram_start = ORIGIN (ram)
                0x00005000                __ram_size = 0x5000
                0x20005000                __ram_end = (__ram_start + __ram_size)
                [0x08000000]                PROVIDE (__rom_start, __rom_start)
                [0x00020000]                PROVIDE (__rom_size, __rom_size)
                [0x08020000]                PROVIDE (__rom_end, __rom_end)
                [0x20000000]                PROVIDE (__ram_start, __ram_start)
                [0x00005000]                PROVIDE (__ram_size, __ram_size)
                [0x20005000]                PROVIDE (__ram_end, __ram_end)

.text           0x08000000      0x3fc
                0x08000000                . = ALIGN (0x4)
                0x08000000                __text_start = .
                [0x08000000]                PROVIDE (__text_start, __text_start)
                0x08000000                . = ALIGN (0x4)
 *(.vectors)
 .vectors       0x08000000      0x130 out/vectors.o
                0x08000000                vectors
                0x08000130                . = ALIGN (0x4)
 *(.text .text.* .gnu.linkonce.t.*)
 .text          0x08000130       0x68 out/startup.o
                0x08000130                Reset_Handler
                0x08000172                low_level_init_1
                0x08000172                low_level_init_0
                0x08000172                __default_low_level_init
 .text.gpio_init
                0x08000198       0x98 out/gpio.o
                0x08000198                gpio_init
 .text.gpio_pin_cfg
                0x08000230       0x5c out/gpio.o
                0x08000230                gpio_pin_cfg
 .text.main     0x0800028c       0x6c out/main.o
                0x0800028c                main
 .text.flash_latency
                0x080002f8       0x4c out/main.o
 .text.pll_start
                0x08000344       0x9c out/main.o
 .text.system_init
                0x080003e0        0xc out/main.o
 .text.__Default_Handler
                0x080003ec       0x10 out/vectors.o
                0x080003ec                EXTI2_IRQHandler
                0x080003ec                TIM8_TRG_COM_IRQHandler
                0x080003ec                TIM8_CC_IRQHandler
                0x080003ec                DebugMon_Handler
                0x080003ec                TIM1_CC_IRQHandler
                0x080003ec                HardFault_Handler
                0x080003ec                TIM6_IRQHandler
                0x080003ec                SysTick_Handler
                0x080003ec                PVD_IRQHandler
                0x080003ec                SDIO_IRQHandler
                0x080003ec                __Reserved_0x1C_Handler
                0x080003ec                PendSV_Handler
                0x080003ec                NMI_Handler
                0x080003ec                EXTI3_IRQHandler
                0x080003ec                __Reserved_0x20_Handler
                0x080003ec                USB_HP_CAN_TX_IRQHandler
                0x080003ec                EXTI0_IRQHandler
                0x080003ec                I2C2_EV_IRQHandler
                0x080003ec                UsageFault_Handler
                0x080003ec                ADC1_2_IRQHandler
                0x080003ec                SPI1_IRQHandler
                0x080003ec                CAN_SCE_IRQHandler
                0x080003ec                TAMPER_IRQHandler
                0x080003ec                TIM8_UP_IRQHandler
                0x080003ec                DMA2_Channel2_IRQHandler
                0x080003ec                DMA1_Channel4_IRQHandler
                0x080003ec                USART3_IRQHandler
                0x080003ec                RTC_IRQHandler
                0x080003ec                DMA1_Channel7_IRQHandler
                0x080003ec                UART5_IRQHandler
                0x080003ec                ADC3_IRQHandler
                0x080003ec                USBWakeup_IRQHandler
                0x080003ec                TIM4_IRQHandler
                0x080003ec                CAN_RX1_IRQHandler
                0x080003ec                DMA2_Channel1_IRQHandler
                0x080003ec                __Reserved_0x34_Handler
                0x080003ec                I2C1_EV_IRQHandler
                0x080003ec                DMA1_Channel6_IRQHandler
                0x080003ec                UART4_IRQHandler
                0x080003ec                TIM3_IRQHandler
                0x080003ec                RCC_IRQHandler
                0x080003ec                TIM1_TRG_COM_IRQHandler
                0x080003ec                DMA1_Channel1_IRQHandler
                0x080003ec                EXTI15_10_IRQHandler
                0x080003ec                TIM7_IRQHandler
                0x080003ec                TIM5_IRQHandler
                0x080003ec                __Reserved_0x28_Handler
                0x080003ec                EXTI9_5_IRQHandler
                0x080003ec                SPI2_IRQHandler
                0x080003ec                USB_LP_CAN_RX0_IRQHandler
                0x080003ec                MemManage_Handler
                0x080003ec                __Reserved_0x24_Handler
                0x080003ec                SVC_Handler
                0x080003ec                DMA1_Channel5_IRQHandler
                0x080003ec                EXTI4_IRQHandler
                0x080003ec                DMA1_Channel3_IRQHandler
                0x080003ec                FSMC_IRQHandler
                0x080003ec                TIM1_UP_IRQHandler
                0x080003ec                WWDG_IRQHandler
                0x080003ec                TIM2_IRQHandler
                0x080003ec                TIM1_BRK_IRQHandler
                0x080003ec                EXTI1_IRQHandler
                0x080003ec                RTCAlarm_IRQHandler
                0x080003ec                DMA2_Channel4_5_IRQHandler
                0x080003ec                USART2_IRQHandler
                0x080003ec                I2C2_ER_IRQHandler
                0x080003ec                DMA1_Channel2_IRQHandler
                0x080003ec                TIM8_BRK_IRQHandler
                0x080003ec                FLASH_IRQHandler
                0x080003ec                BusFault_Handler
                0x080003ec                USART1_IRQHandler
                0x080003ec                SPI3_IRQHandler
                0x080003ec                I2C1_ER_IRQHandler
                0x080003ec                DMA2_Channel3_IRQHandler
                0x080003fc                . = ALIGN (0x4)
 *(.glue_7t .glue_7)
 .glue_7        0x080003fc        0x0 linker stubs
 .glue_7t       0x080003fc        0x0 linker stubs
                0x080003fc                . = ALIGN (0x4)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
                0x080003fc                . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x080003fc                . = ALIGN (0x4)
 *(.gcc_except_table)
                0x080003fc                . = ALIGN (0x4)
 *(.eh_frame_hdr)
                0x080003fc                . = ALIGN (0x4)
 *(.eh_frame)
                0x080003fc                . = ALIGN (0x4)
 *(.init)
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __preinit_array_start = .
 *(.preinit_array)
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __preinit_array_end = .
                0x080003fc                __init_array_start = .
 *(SORT(.init_array.*))
                0x080003fc                . = ALIGN (0x4)
 *(.init_array)
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __init_array_end = .
 *(.fini)
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __fini_array_start = .
 *(.fini_array)
                0x080003fc                . = ALIGN (0x4)
 *(SORT(.fini_array.*))
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __fini_array_end = .
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __text_end = .
                [0x080003fc]                PROVIDE (__text_end, __text_end)

.vfp11_veneer   0x080003fc        0x0
 .vfp11_veneer  0x080003fc        0x0 linker stubs

.v4_bx          0x080003fc        0x0
 .v4_bx         0x080003fc        0x0 linker stubs

.iplt           0x080003fc        0x0
 .iplt          0x080003fc        0x0 out/startup.o

.rel.dyn        0x080003fc        0x0
 .rel.iplt      0x080003fc        0x0 out/startup.o
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __exidx_start = .
                [0x080003fc]                PROVIDE (__exidx_start, __exidx_start)

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x080003fc                . = ALIGN (0x4)
                0x080003fc                __exidx_end = .
                [0x080003fc]                PROVIDE (__exidx_end, __exidx_end)

.data           0x20000000        0x0 load address 0x080003fc
                0x20000000                . = ALIGN (0x4)
                0x080003fc                __data_init_start = LOADADDR (.data)
                [0x080003fc]                PROVIDE (__data_init_start, __data_init_start)
                0x20000000                __data_start = .
                [0x20000000]                PROVIDE (__data_start, __data_start)
                0x20000000                . = ALIGN (0x4)
 *(.data .data.* .gnu.linkonce.d.*)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __data_end = .
                [0x20000000]                PROVIDE (__data_end, __data_end)

.igot.plt       0x20000000        0x0 load address 0x080003fc
 .igot.plt      0x20000000        0x0 out/startup.o

.bss            0x20000000        0x0
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_start = .
                [0x20000000]                PROVIDE (__bss_start, __bss_start)
                0x20000000                . = ALIGN (0x4)
 *(.bss .bss.* .gnu.linkonce.b.*)
                0x20000000                . = ALIGN (0x4)
 *(COMMON)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_end = .
                [0x20000000]                PROVIDE (__bss_end, __bss_end)

.stack          0x20000000      0x400
                0x20000000                . = ALIGN (0x8)
                0x20000000                __stack_start = .
                [0x20000000]                PROVIDE (__stack_start, __stack_start)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __main_stack_start = .
                [0x20000000]                PROVIDE (__main_stack_start, __main_stack_start)
                0x20000000                . = (. + __main_stack_size)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __main_stack_end = .
                [0x20000000]                PROVIDE (__main_stack_end, __main_stack_end)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __process_stack_start = .
                [0x20000000]                PROVIDE (__process_stack_start, __process_stack_start)
                0x20000400                . = (. + __process_stack_size)
 *fill*         0x20000000      0x400 
                0x20000400                . = ALIGN (0x8)
                0x20000400                __process_stack_end = .
                [0x20000400]                PROVIDE (__process_stack_end, __process_stack_end)
                0x20000400                . = ALIGN (0x8)
                0x20000400                __stack_end = .
                [0x20000400]                PROVIDE (__stack_end, __stack_end)
                0x20000400                . = ALIGN (0x4)
                0x20000400                __heap_start = .
                [0x20000400]                PROVIDE (__heap_start, __heap_start)
                0x20000400                . = ALIGN (0x4)
                0x20005000                __heap_end = __ram_end
                [0x20005000]                PROVIDE (__heap_end, __heap_end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 out/startup.o
 .debug_aranges
                0x00000020       0x28 out/gpio.o
 .debug_aranges
                0x00000048       0x38 out/main.o
 .debug_aranges
                0x00000080       0x20 out/vectors.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x602
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0x66 out/startup.o
 .debug_info    0x00000066      0x224 out/gpio.o
 .debug_info    0x0000028a      0x2f0 out/main.o
 .debug_info    0x0000057a       0x88 out/vectors.o

.debug_abbrev   0x00000000      0x2a4
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x14 out/startup.o
 .debug_abbrev  0x00000014       0xf2 out/gpio.o
 .debug_abbrev  0x00000106      0x11b out/main.o
 .debug_abbrev  0x00000221       0x83 out/vectors.o

.debug_line     0x00000000      0x5b0
 *(.debug_line)
 .debug_line    0x00000000       0x70 out/startup.o
 .debug_line    0x00000070      0x238 out/gpio.o
 .debug_line    0x000002a8      0x2ca out/main.o
 .debug_line    0x00000572       0x3e out/vectors.o

.debug_frame    0x00000000      0x128
 *(.debug_frame)
 .debug_frame   0x00000000       0x5c out/gpio.o
 .debug_frame   0x0000005c       0x9c out/main.o
 .debug_frame   0x000000f8       0x30 out/vectors.o

.debug_str      0x00000000    0x3727c
 *(.debug_str)
 .debug_str     0x00000000    0x32282 out/gpio.o
                              0x323d9 (size before relaxing)
 .debug_str     0x00032282     0x4fc5 out/main.o
                              0x3735d (size before relaxing)
 .debug_str     0x00037247       0x35 out/vectors.o
                               0x240c (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x00000000       0x2f
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x21 out/startup.o
 .ARM.attributes
                0x00000021       0x33 out/gpio.o
 .ARM.attributes
                0x00000054       0x33 out/main.o
 .ARM.attributes
                0x00000087       0x33 out/vectors.o

/DISCARD/
 *(.note.GNU-stack)
                0x000003fc                PROVIDE (__text_size, (__text_end - __text_start))
                0x00000000                PROVIDE (__exidx_size, (__exidx_end - __exidx_start))
                0x00000000                PROVIDE (__data_size, (__data_end - __data_start))
                0x00000000                PROVIDE (__bss_size, (__bss_end - __bss_start))
                0x00000400                PROVIDE (__stack_size, (__stack_end - __stack_start))
                0x00004c00                PROVIDE (__heap_size, (__heap_end - __heap_start))
OUTPUT(out/stm32_blink_led.elf elf32-littlearm)

.debug_ranges   0x00000000       0x50
 .debug_ranges  0x00000000       0x18 out/gpio.o
 .debug_ranges  0x00000018       0x28 out/main.o
 .debug_ranges  0x00000040       0x10 out/vectors.o

.debug_macro    0x00000000     0x9f63
 .debug_macro   0x00000000       0x81 out/gpio.o
 .debug_macro   0x00000081      0x85c out/gpio.o
 .debug_macro   0x000008dd       0x22 out/gpio.o
 .debug_macro   0x000008ff       0x44 out/gpio.o
 .debug_macro   0x00000943       0x1c out/gpio.o
 .debug_macro   0x0000095f      0x1f7 out/gpio.o
 .debug_macro   0x00000b56       0x56 out/gpio.o
 .debug_macro   0x00000bac      0x6bd out/gpio.o
 .debug_macro   0x00001269     0x7def out/gpio.o
 .debug_macro   0x00009058      0x353 out/gpio.o
 .debug_macro   0x000093ab       0xac out/main.o
 .debug_macro   0x00009457       0x34 out/main.o
 .debug_macro   0x0000948b       0x2e out/main.o
 .debug_macro   0x000094b9      0xa99 out/main.o
 .debug_macro   0x00009f52       0x11 out/vectors.o

.comment        0x00000000       0x6a
 .comment       0x00000000       0x6a out/gpio.o
                                 0x6b (size before relaxing)
 .comment       0x0000006a       0x6b out/main.o
 .comment       0x0000006a       0x6b out/vectors.o

Cross Reference Table

Symbol                                            File
ADC1_2_IRQHandler                                 out/vectors.o
ADC3_IRQHandler                                   out/vectors.o
BusFault_Handler                                  out/vectors.o
CAN_RX1_IRQHandler                                out/vectors.o
CAN_SCE_IRQHandler                                out/vectors.o
DMA1_Channel1_IRQHandler                          out/vectors.o
DMA1_Channel2_IRQHandler                          out/vectors.o
DMA1_Channel3_IRQHandler                          out/vectors.o
DMA1_Channel4_IRQHandler                          out/vectors.o
DMA1_Channel5_IRQHandler                          out/vectors.o
DMA1_Channel6_IRQHandler                          out/vectors.o
DMA1_Channel7_IRQHandler                          out/vectors.o
DMA2_Channel1_IRQHandler                          out/vectors.o
DMA2_Channel2_IRQHandler                          out/vectors.o
DMA2_Channel3_IRQHandler                          out/vectors.o
DMA2_Channel4_5_IRQHandler                        out/vectors.o
DebugMon_Handler                                  out/vectors.o
EXTI0_IRQHandler                                  out/vectors.o
EXTI15_10_IRQHandler                              out/vectors.o
EXTI1_IRQHandler                                  out/vectors.o
EXTI2_IRQHandler                                  out/vectors.o
EXTI3_IRQHandler                                  out/vectors.o
EXTI4_IRQHandler                                  out/vectors.o
EXTI9_5_IRQHandler                                out/vectors.o
FLASH_IRQHandler                                  out/vectors.o
FSMC_IRQHandler                                   out/vectors.o
HardFault_Handler                                 out/vectors.o
I2C1_ER_IRQHandler                                out/vectors.o
I2C1_EV_IRQHandler                                out/vectors.o
I2C2_ER_IRQHandler                                out/vectors.o
I2C2_EV_IRQHandler                                out/vectors.o
MemManage_Handler                                 out/vectors.o
NMI_Handler                                       out/vectors.o
PVD_IRQHandler                                    out/vectors.o
PendSV_Handler                                    out/vectors.o
RCC_IRQHandler                                    out/vectors.o
RTCAlarm_IRQHandler                               out/vectors.o
RTC_IRQHandler                                    out/vectors.o
Reset_Handler                                     out/startup.o
                                                  out/vectors.o
SDIO_IRQHandler                                   out/vectors.o
SPI1_IRQHandler                                   out/vectors.o
SPI2_IRQHandler                                   out/vectors.o
SPI3_IRQHandler                                   out/vectors.o
SVC_Handler                                       out/vectors.o
SysTick_Handler                                   out/vectors.o
TAMPER_IRQHandler                                 out/vectors.o
TIM1_BRK_IRQHandler                               out/vectors.o
TIM1_CC_IRQHandler                                out/vectors.o
TIM1_TRG_COM_IRQHandler                           out/vectors.o
TIM1_UP_IRQHandler                                out/vectors.o
TIM2_IRQHandler                                   out/vectors.o
TIM3_IRQHandler                                   out/vectors.o
TIM4_IRQHandler                                   out/vectors.o
TIM5_IRQHandler                                   out/vectors.o
TIM6_IRQHandler                                   out/vectors.o
TIM7_IRQHandler                                   out/vectors.o
TIM8_BRK_IRQHandler                               out/vectors.o
TIM8_CC_IRQHandler                                out/vectors.o
TIM8_TRG_COM_IRQHandler                           out/vectors.o
TIM8_UP_IRQHandler                                out/vectors.o
UART4_IRQHandler                                  out/vectors.o
UART5_IRQHandler                                  out/vectors.o
USART1_IRQHandler                                 out/vectors.o
USART2_IRQHandler                                 out/vectors.o
USART3_IRQHandler                                 out/vectors.o
USBWakeup_IRQHandler                              out/vectors.o
USB_HP_CAN_TX_IRQHandler                          out/vectors.o
USB_LP_CAN_RX0_IRQHandler                         out/vectors.o
UsageFault_Handler                                out/vectors.o
WWDG_IRQHandler                                   out/vectors.o
__Reserved_0x1C_Handler                           out/vectors.o
__Reserved_0x20_Handler                           out/vectors.o
__Reserved_0x24_Handler                           out/vectors.o
__Reserved_0x28_Handler                           out/vectors.o
__Reserved_0x34_Handler                           out/vectors.o
__bss_end                                         out/startup.o
__bss_start                                       out/startup.o
__data_end                                        out/startup.o
__data_init_start                                 out/startup.o
__data_start                                      out/startup.o
__default_low_level_init                          out/startup.o
__main_stack_end                                  out/vectors.o
__process_stack_end                               out/startup.o
gpio_init                                         out/gpio.o
                                                  out/main.o
gpio_pin_cfg                                      out/gpio.o
                                                  out/main.o
low_level_init_0                                  out/startup.o
low_level_init_1                                  out/startup.o
main                                              out/main.o
                                                  out/startup.o
vectors                                           out/vectors.o
