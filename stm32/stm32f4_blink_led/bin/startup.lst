ARM GAS  C:\Users\Daro\AppData\Local\Temp\cc8pJ8eZ.s 			page 1


   1              	# 1 "startup.S"
   1              	/******************************************************************************
   0              	
   2              	* author: Freddie Chopin, http://www.freddiechopin.info/
   0              	
   3              	* file: startup.S
   4              	* last change: 2012-03-18
   5              	*
   6              	* chip: ARMv7-M(E) (Cortex-M3 / Cortex-M4)
   7              	* compiler: arm-none-eabi-gcc (GNU Tools for ARM Embedded Processors) 4.6.2
   8              	* 	20110921 (release) [ARM/embedded-4_6-branch revision 182083]
   9              	*
  10              	* description:
  11              	* ARMv7-M(E) (Cortex-M3 / Cortex-M4) assembly startup code
  12              	******************************************************************************/
  13              	
  14              	/*
  15              	+=============================================================================+
  16              	| includes
  17              	+=============================================================================+
  18              	*/
  19              	
  20              	#include "hdr/hdr_special_registers.h"
   1              	/** \file hdr_special_registers.h
   2              	 * \brief Header with definition of bits in special registers in ARMv7-M(E) core
   3              	 * \author Freddie Chopin, http://www.freddiechopin.info/
   4              	 * \date 2012-03-18
   5              	 */
   6              	
   7              	/******************************************************************************
   8              	* chip: ARMv7-M(E) (Cortex-M3 / Cortex-M4)
   9              	* compiler: arm-none-eabi-gcc (GNU Tools for ARM Embedded Processors) 4.6.2
  10              	* 	20110921 (release) [ARM/embedded-4_6-branch revision 182083]
  11              	******************************************************************************/
  12              	
  13              	#ifndef HDR_SPECIAL_REGISTERS_H_
  14              	#define HDR_SPECIAL_REGISTERS_H_
  15              	
  16              	/*
  17              	+-----------------------------------------------------------------------------+
  18              	| PRIMASK - Register to mask out configurable exceptions
  19              	+-----------------------------------------------------------------------------+
  20              	*/
  21              	
  22              	#define PRIMASK_MASK_EXCEPTIONS_bit			0
  23              	
  24              	#define PRIMASK_MASK_EXCEPTIONS				(1 << PRIMASK_MASK_EXCEPTIONS_bit)
  25              	
  26              	/*
  27              	+-----------------------------------------------------------------------------+
  28              	| FAULTMASK - Register to raise priority to the HardFault level
  29              	+-----------------------------------------------------------------------------+
  30              	*/
  31              	
  32              	#define FAULTMASK_MASK_EXCEPTIONS_bit		0
  33              	
  34              	#define FAULTMASK_MASK_EXCEPTIONS			(1 << FAULTMASK_MASK_EXCEPTIONS_bit)
ARM GAS  C:\Users\Daro\AppData\Local\Temp\cc8pJ8eZ.s 			page 2


  35              	
  36              	/*
  37              	+-----------------------------------------------------------------------------+
  38              	| CONTROL - The special-purpose control register
  39              	+-----------------------------------------------------------------------------+
  40              	*/
  41              	
  42              	#define CONTROL_THREAD_UNPRIVILEGED_bit		0
  43              	#define CONTROL_ALTERNATE_STACK_bit			1
  44              	
  45              	#define CONTROL_THREAD_UNPRIVILEGED			(1 << CONTROL_THREAD_UNPRIVILEGED_bit)
  46              	#define CONTROL_ALTERNATE_STACK				(1 << CONTROL_ALTERNATE_STACK_bit)
  47              	
  21              	
  22              	/*
  23              	+=============================================================================+
  24              	| ARMv7-M(E) (Cortex-M3 / Cortex-M4) startup code
  25              	+=============================================================================+
  26              	*/
  27              	
  28              	.text
  29              	.balign 2
  30              	.syntax unified
  31              	.thumb
  32              	.thumb_func
  33              	.global Reset_Handler
  34              	
  35              	Reset_Handler:
  36              	
  37              	/*
  38              	+-----------------------------------------------------------------------------+
  39              	| Initialize the process stack pointer
  40              	+-----------------------------------------------------------------------------+
  41              	*/
  42              	
  43 0000 1048     		ldr		r0, =__process_stack_end
  44 0002 80F30988 		msr		PSP, r0
  45              	
  46              	/*
  47              	+-----------------------------------------------------------------------------+
  48              	| Thread mode uses process stack (PSP) and is privileged
  49              	+-----------------------------------------------------------------------------+
  50              	*/
  51              	
  52 0006 0220     		movs	r0, #CONTROL_ALTERNATE_STACK
  53 0008 80F31488 		msr		CONTROL, r0
  54 000c BFF36F8F 		isb
  55              	
  56              	/*
  57              	+-----------------------------------------------------------------------------+
  58              	| Branch to low_level_init_0() function (.data and .bss are not initialized!)
  59              	+-----------------------------------------------------------------------------+
  60              	*/
  61              	
  62 0010 0D48     		ldr		r0, =low_level_init_0
  63 0012 8047     		blx		r0
  64              	
ARM GAS  C:\Users\Daro\AppData\Local\Temp\cc8pJ8eZ.s 			page 3


  65              	/*
  66              	+-----------------------------------------------------------------------------+
  67              	| Initialize .data section
  68              	+-----------------------------------------------------------------------------+
  69              	*/
  70              	
  71 0014 0D49     		ldr		r1, =__data_init_start
  72 0016 0E4A     	    ldr		r2, =__data_start
  73 0018 0E4B     	    ldr		r3, =__data_end
  74              	
  75 001a 9A42     	1:	cmp		r2, r3
  76 001c 3EBF     		ittt	lo
  77 001e 51F8040B 		ldrlo	r0, [r1], #4
  78 0022 42F8040B 		strlo	r0, [r2], #4
  79 0026 F8E7     		blo		1b
  80              	
  81              	/*
  82              	+-----------------------------------------------------------------------------+
  83              	| Zero-init .bss section
  84              	+-----------------------------------------------------------------------------+
  85              	*/
  86              	
  87 0028 0020     		movs	r0, #0
  88 002a 0B49     		ldr		r1, =__bss_start
  89 002c 0B4A     		ldr		r2, =__bss_end
  90              	
  91 002e 9142     	1:	cmp		r1, r2
  92 0030 3CBF     		itt		lo
  93 0032 41F8040B 		strlo	r0, [r1], #4
  94 0036 FAE7     		blo		1b
  95              	
  96              	/*
  97              	+-----------------------------------------------------------------------------+
  98              	| Call C++ constructors for global and static objects
  99              	+-----------------------------------------------------------------------------+
 100              	*/
 101              	#ifdef __USES_CXX
 102              		ldr		r0, =__libc_init_array
 103              		blx		r0
 104              	#endif
 105              	
 106              	/*
 107              	+-----------------------------------------------------------------------------+
 108              	| Branch to low_level_init_1() function
 109              	+-----------------------------------------------------------------------------+
 110              	*/
 111              	
 112 0038 0948     		ldr		r0, =low_level_init_1
 113 003a 8047     		blx		r0
 114              	
 115              	/*
 116              	+-----------------------------------------------------------------------------+
 117              	| Branch to main() with link
 118              	+-----------------------------------------------------------------------------+
 119              	*/
 120              	
 121 003c 0948     		ldr		r0, =main
ARM GAS  C:\Users\Daro\AppData\Local\Temp\cc8pJ8eZ.s 			page 4


 122 003e 8047     		blx		r0
 123              	
 124              	/*
 125              	+-----------------------------------------------------------------------------+
 126              	| Call C++ destructors for global and static objects
 127              	+-----------------------------------------------------------------------------+
 128              	*/
 129              	#ifdef __USES_CXX
 130              		ldr		r0, =__libc_fini_array
 131              		blx		r0
 132              	#endif
 133              	
 134              	/*
 135              	+-----------------------------------------------------------------------------+
 136              	| On return - loop till the end of the world
 137              	+-----------------------------------------------------------------------------+
 138              	*/
 139              	
 140 0040 FEE7     		b		.
 141              	
 142              	/*
 143              	+=============================================================================+
 144              	| __default_low_level_init() - replacement for undefined low_level_init_0()
 145              	| and/or low_level_init_1(). This function just returns.
 146              	+=============================================================================+
 147              	*/
 148              	
 149              	.text
 150              	.balign 2
 151              	.syntax unified
 152              	.thumb
 153              	.thumb_func
 154              	.global __default_low_level_init
 155              	
 156              	__default_low_level_init:
 157 0042 7047     		bx		lr
 158              	
 159              	/*
 160              	+=============================================================================+
 161              	| assign undefined low_level_init_0() and/or low_level_init_1() to
 162              	| __default_low_level_init()
 163              	+=============================================================================+
 164              	*/
 165              	
 166              	.weak	low_level_init_0
 167              	.global	low_level_init_0
 168              	.set	low_level_init_0, __default_low_level_init
 169              	
 170              	.weak	low_level_init_1
 171              	.global	low_level_init_1
 172 0044 00000000 	.set	low_level_init_1, __default_low_level_init
 172      00000000 
 172      00000000 
 172      00000000 
 172      00000000 
ARM GAS  C:\Users\Daro\AppData\Local\Temp\cc8pJ8eZ.s 			page 5


DEFINED SYMBOLS
           startup.S:29     .text:0000000000000000 $t
           startup.S:35     .text:0000000000000000 Reset_Handler
           startup.S:156    .text:0000000000000042 low_level_init_0
           startup.S:156    .text:0000000000000042 low_level_init_1
           startup.S:156    .text:0000000000000042 __default_low_level_init
           startup.S:172    .text:0000000000000044 $d
                   .debug_aranges:000000000000000c $d

UNDEFINED SYMBOLS
__process_stack_end
__data_init_start
__data_start
__data_end
__bss_start
__bss_end
main
